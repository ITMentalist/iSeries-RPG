     H NoMain
     h  Debug(*Yes)
     h  Option(*SrcStmt:*NoDebugIO:*ShowCpy:*NoUnref)
     h  AlwNull(*UsrCtl)

      /Define MDBPHP1
      *- Declare Prototypes ---------------------------------------------------
      *************************************************************************
      /COPY QHDRMODSRC,PDBSYS
       ///COPY QHDRMODSRC,PDBPHP
      /COPY QHDRMODSRC,PDBPHPL

      *--- Define Global Data ---(Level Job/ActGrp pour le module) ------------
      *************************************************************************
      *---  Define Buffer full DB PHP --
     D  db             DS                  Based(pDB)
     d                                     LikeDs(@dbPHP#dsPHP)

      *--- Define globale for Module ---
     D xSQLState@      S               *   Inz( %addr(SQLState) )
     D xSQLState       DS             5    Based(xSQLState@)
     D  xSQLState2                    2a
     D  xSQLState3                    3a
     D*-
     D SuccessSQL      C                   const('00')
     D WarningSQL      C                   const('01')
     D NoDataSQL       C                   const('02')

      * -----------------------------------------------------------------------
      * ***
      * -----------------------------------------------------------------------
       DCL-PROC #keyLinkEXIDbyINNS   EXPORT;
        DCL-PI *N    Ind;
          ptr        Pointer;
          pIDFD      Zoned(3)  ;
          pEXID      Zoned(13) ;
          pINNS      Zoned(9)  Const;
        //xDtSrch    Date      Const Options(*NOPASS);
        END-PI;
        // --- Define ---
         DCL-S  todayN8      Zoned(8);

        pDB = ptr;

        DBclrError(ptr);
        DBclrStatus(ptr);
        todayN8 = %dec(%date():*ISO);
        Exec Sql
         Select IDFDO9, EXIDO9 Into :pIDFD, :pEXID
           From PLINO9
          Where INNSO9 = :pINNS
            And RONDO9 = '13'
            And RDAVO9 <= :todayN8 And :todayN8 <= RDATO9;
        if not #sqlStatus();
          Return *Off;
        endif;
        Return *On;

       END-PROC;

      * -----------------------------------------------------------------------
       DCL-PROC #sqlStatus;
        DCL-PI *N    Ind;
        END-PI;
        select;
         when xSQLState2 = SuccessSQL;
           db.Sts.found = *On;
           Return *On;
         when xSQLState2 = WarningSQL;
           db.Sts.found = *On;
           db.Err.warning = *On;
           db.Err.wrnCd = %char(SQLCOD);
           Return *On;
         when xSQLState2 = NoDataSQL;
           clear db.FYSL8;
           db.Sts.found = *Off;
           db.Err.warning = *On;
           db.Err.wrnCd = %char(SQLCOD);
           Return *On;
         other;         // ErrorSQL
           clear db.FYSL8;
           db.Sts.found = *On;
           db.Err.error = *On;
           db.Err.errCd = %char(SQLCOD);
           Return *Off;
        endsl;
       END-PROC;      
